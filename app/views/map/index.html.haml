!!!
%html
%head

-title ('Karte')
-if @access
  #main.row-fluid
    %div{:style => 'width:100%;'}
      #map{:style => 'width: 100%; height: 1200px;'}


    :javascript
        var markers = [];
        var map = null;

        function createPin(person, f){
            var pers = toPersonObject(person)
            console.log(pers.name + " " + pers.location)
            f(pers);
            return -1;
        }

        function createPinImage(person) {
            console.log(person)

            var pinIcon = (person.status ? "pin_star" : "pin"); // Accepted
            var pinColor = colourNameToHex(person.unit_planned).replace('#',''); // Unit
            var pinLetter = getLetterForPin(person); // Role
            var pinLetterColor = "daa520"; 
            var pinStarColor = colourNameToHex(oldUnitToColour(person.unit_old)).replace('#','');
            console.log(oldUnitToColour(person.unit_old)+ " - " + pinStarColor);
            var pinImage = new google.maps.MarkerImage("https://chart.apis.google.com/chart?chst=d_map_xpin_letter&chld=" + pinIcon + "|" + pinLetter + "|" + pinColor + "|"+ pinLetterColor + "|" + pinStarColor,
              new google.maps.Size(21, 34),
              new google.maps.Point(0,0),
              new google.maps.Point(10, 34));
    
           return pinImage;
    
        }

        function getLetterForPin(person) {
            if(person.role == "Unitteilnehmer")
            {
                return "T";    
            }
            return person.role[0];
        }

        function toPersonObject(personArray) {
            var person = new Object();
            //@users.push([id, name, address, role, status, unit_old, unit_planned link, latitude, longitude, package, association])

            person.id = personArray[0];
            person.name = personArray[1];
            person.address = personArray[2];
            person.role = personArray[3];
            person.status = personArray[4];
            person.unit_old = personArray[5];
            person.unit_planned = personArray[6];
            person.link = personArray[7];
            person.location = {lat: parseFloat(personArray[8]), lng: parseFloat(personArray[9])};
            person.package = personArray[10]
            person.association = personArray[11]
    
            return person;
        }

        function initMap() {
            const germany = {lat: 51.1642, lng: 10.4541};
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 7,
                center: germany,
             });

            var people =  #{raw @users} ;
            console.log("People " + people.length);

            for (var i = 0; i < people.length; i++) {
                selPeople = people[i];
                createPin(selPeople, function(pers) {
                 var marker = new google.maps.Marker({
                   map: map,
                   position: pers.location,
                   icon: createPinImage(pers),
                   unit_old: pers.unit_old,
                   unit_planned: pers.unit_planned,
                   role: pers.role 
                 });
      
                 var infowindow = new google.maps.InfoWindow({
                   content: pers.id + " - " + pers.link + "</br>" + 
                            pers.role + "</br>" + 
                            pers.unit_old + "</br>" + 
                            pers.unit_planned + "</br>" + 
                            pers.package + "</br>" + 
                            pers.association
                 });
                 marker.addListener('click', function() {
                   infowindow.open(map, marker);
                 });
                 markers.push(marker);
                });
            };

        }

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
          for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
          }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
          setMapOnAll(null);
        }
  
        // Shows any markers currently in the array.
        function showMarkers() {
          setMapOnAll(map);
        }

        // Shows any markers currently in the array.
        function showUnit(name) {
          for (var i = 0; i < markers.length; i++) {
            if (markers[i].unit_old == name || markers[i].unit_planned == name) {
                markers[i].setMap(map);
            }
          }
        }
  
        // Shows any markers currently in the array.
        function hideUnit(name) {
          for (var i = 0; i < markers.length; i++) {
            if (markers[i].unit_old == name || markers[i].unit_planned == name) {
                markers[i].setMap(null);
            }
          }
        }

        // Shows any markers currently in the array.
        function showRole(name) {
          for (var i = 0; i < markers.length; i++) {
            if (markers[i].role == name) {
                markers[i].setMap(map);
            }
          }
        }
  
        // Shows any markers currently in the array.
        function hideRole(name) {
          for (var i = 0; i < markers.length; i++) {
            if (markers[i].role == name) {
                markers[i].setMap(null);
            }
          }
        }
        
        function oldUnitToColour(oldUnit) {
            var colours = {
                "Nord 1":"dimgray",
                "Nord 2":"silver",
                "Nordost":"darkred",
                "Sued 1":"tomato",
                "Sued 2":"moccasin",
                "Sued 3":"orange",
                "Sued 4":"darkgoldenrod",
                "Sued 5":"darkgreen",
                "Sued Mitte":"darkolivegreen",
                "Suedost 1":"cadetblue",
                "Suedost 2":"darkslategray",
                "Sueddwest 2":"blueviolet",
                "West 1":"sienna",
                "West 2":"orange",
                "West 3":"deepskyblue",
                "West 4":"fuchsia",
                "West Mitte":"darkslateblue",
                "West 5":"darkmagenta"
            }

            if(oldUnit == null || oldUnit == "no old unit")
                return "white";

            return colours[oldUnit];
        } 

        function colourNameToHex(colour)
        {
            var colours = {
                "white":"#ffffff",
                "dimgray":"#696969",
                "silver":"#c0c0c0",
                "darkred":"#8b0000",
                "brown":"#a52a2a",
                "crimson":"#dc143c",
                "tomato":"#ff6347",
                "moccasin":"#ffe4b5",
                "gold":"#ffd700",
                "orange":"#ffa500",
                "darkgoldenrod":"#b8860b",
                "coral":"#ff7f50",
                "sienna":"#a0522d",
                "kastanie":"#800000",
                "chartreuse":"#7fff00",
                "darkgreen":"#006400",
                "forestgreen":"#228b22",
                "darkslategray":"#2f4f4f",
                "darkolivegreen":"#556b2f",
                "cadetblue":"#5f9ea0",
                "deepskyblue":"#00bfff",
                "dodgerblue":"#1e90ff",
                "cornflowerblue":"#6495ed",
                "blue":"#0000ff",
                "darkblue":"#00008b",
                "violet":"#ee82ee",
                "fuchsia":"#ff00ff",
                "darkslateblue":"#483d8b",
                "darkmagenta":"#8b008b",
                "blueviolet":"#8a2be2",
                "black":"#000000"};

            if(colour == null || colour == "" || colour == "undefined" || colour == "no planned unit")
                return colours["white"];

            return colours[colour];
        }

        var mapScript = document.createElement("script");
        mapScript.src = "https://cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js";
        document.getElementsByTagName("head")[0].appendChild(mapScript)

        var mapScript = document.createElement("script");
        mapScript.src = "https://cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js";
        document.getElementsByTagName("head")[0].appendChild(mapScript)

        var mapScript = document.createElement("script");
        mapScript.src = "https://maps.google.com/maps/api/js?key=AIzaSyAPS-uHgTIug9RlK_wBotqn_hrMTkQeUVM&callback=initMap";
        document.getElementsByTagName("head")[0].appendChild(mapScript)

      

%input{:onclick =>"clearMarkers();", :type=>"button", :value=>"Hide Markers"}
%input{:onclick =>"showMarkers();", :type=>"button", :value=>"Show Markers"}
%br 
%br
- Settings.person.role.each do |g|
  %input{:onclick =>"showRole('" + g[1].to_s + "');", :type=>"button", :value=>"Show " + g[1].to_s}
  %input{:onclick =>"hideRole('" + g[1].to_s + "');", :type=>"button", :value=>"Hide " + g[1].to_s}
%br 
%br
- @old_units.each do |g|
  %input{:onclick =>"showUnit('" + g.to_s + "');", :type=>"button", :value=>"Show " + g.to_s}
  %input{:onclick =>"hideUnit('" + g.to_s + "');", :type=>"button", :value=>"Hide " + g.to_s}
%br
%br 
%input{:onclick =>"showUnit('no planned unit');", :type=>"button", :value=>"Show no planned unit " }
%input{:onclick =>"hideUnit('no planned unit');", :type=>"button", :value=>"Hide no planned unit" }
%br 
- Settings.unit_colors.each do |g|
  %input{:onclick =>"showUnit('" + g.to_s + "');", :type=>"button", :value=>"Show " + g.to_s}
  %input{:onclick =>"hideUnit('" + g.to_s + "');", :type=>"button", :value=>"Hide " + g.to_s}
  