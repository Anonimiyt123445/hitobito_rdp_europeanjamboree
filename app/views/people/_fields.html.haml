-#  Copyright (c) 2012-2013, Jungwacht Blauring Schweiz. This file is part of
-#  hitobito and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito.


-# BEWARE: This partial is used from different places (e.g. event/register/register).
-#         Make sure not to use relative partial paths here or in any extensions
-#         unless these partials also exist in all folders referencing this file here.

- without_relations ||= false

= javascript_include_tag "https://rawgithub.com/indrimuska/jquery-editable-select/master/dist/jquery-editable-select.min.js"
%link{:rel => :stylesheet, :type => :"text/css", :href => "https://rawgithub.com/indrimuska/jquery-editable-select/master/dist/jquery-editable-select.min.css"}

= field_set_tag do
  - if @person.registration_locked
    = render_attrs(entry, :first_name, :last_name)
  - else
    = f.labeled_input_fields :first_name, :last_name
  = f.labeled_input_fields :nickname

  = render_extensions :name_fields, locals: { f: f }

= render 'contactable/fields', f: f

= field_set_tag do
  - if @person.registration_locked
    = render_attrs(entry, :gender, :birthday)
  - else
    = f.labeled(:gender) do
      - (Person::GENDERS + ['']).each do |key|
        = f.inline_radio_button(:gender, key, entry.gender_label(key))
    = f.labeled_string_field(:birthday,
                            value: f.date_value(:birthday),
                            help_inline: t('.format_birthday'),
                            class: 'span2')

= render_extensions :fields, locals: { f: f }

- if !without_relations && PeopleRelation.possible_kinds.present?
  = field_set_tag do
    = f.labeled_inline_fields_for :relations_to_tails,
                                  'people_relation_fields',
                                  entry.relations_to_tails.includes(:tail)


= f.labeled_input_fields :rdp_association_number
= f.labeled_input_fields :rdp_association
= f.labeled_input_fields :rdp_association_region
= f.labeled_input_fields :rdp_association_sub_region
= f.labeled_input_fields :rdp_association_group


= field_set_tag do
  - if @person.registration_locked
    = render_attrs(entry, :role)
    = render_attrs(entry, :tour)
  - else
    = f.labeled_select(:role, raw(@possible_roles))
    = f.labeled_select(:tour, options_for_select(raw(@possible_tour)))

= field_set_tag do
  = f.labeled_input_field(:additional_information, help: t('.no_sensitive_information'))

:javascript
  var OTHER = "Andere"
  var association_tree = JSON.parse('#{raw @association_tree.to_json}');
  var rdp_association = '#{@person.rdp_association}';
  var rdp_association_region = '#{@person.rdp_association_region}';
  var rdp_association_sub_region = '#{@person.rdp_association_sub_region}';
  var rdp_association_group = '#{@person.rdp_association_group}';

  function reloadDropdown(rdp_association, rdp_association_region, rdp_association_sub_region, rdp_association_group) {
    // console.log(rdp_association + " - " + rdp_association_region + " - " + rdp_association_sub_region + " - " + rdp_association_group)
    $("#person_rdp_association").editableSelect('clear');
    $("#person_rdp_association").editableSelect('add', rdp_association);
    for (const [key, value] of Object.entries(association_tree)) {
      if(rdp_association != key) {
        $("#person_rdp_association").editableSelect('add',key);
      }
    }
    $("#person_rdp_association").editableSelect();

    $("#person_rdp_association_region").editableSelect('clear');
    $("#person_rdp_association_region").editableSelect('add',rdp_association_region);
    if(rdp_association) {
      try {
        for (const [key, value] of Object.entries(association_tree[rdp_association])) {
          if(rdp_association_region != key) {
            $("#person_rdp_association_region").editableSelect('add',key);
          }
        }
      } catch (e) {
      
      }
    }
    $("#person_rdp_association_region").editableSelect();

    $("#person_rdp_association_sub_region").editableSelect('clear');
    $("#person_rdp_association_sub_region").editableSelect('add', rdp_association_sub_region);
    if(rdp_association && rdp_association_region) {
      try {
        for (const [key, value] of Object.entries(association_tree[rdp_association][rdp_association_region])) {
          if(rdp_association_sub_region != key) {
            $("#person_rdp_association_sub_region").editableSelect('add',key)
          }
        }
      } catch (e) {
        
      }
   }
    $("#person_rdp_association_sub_region").editableSelect();

    $("#person_rdp_association_group").editableSelect('clear');
    $("#person_rdp_association_group").editableSelect('add',rdp_association_group );
    if(rdp_association && rdp_association_region && rdp_association_sub_region) {
      try {
        for (const [key, value] of Object.entries(association_tree[rdp_association][rdp_association_region][rdp_association_sub_region])) {
          if(rdp_association_group != key) {
            $("#person_rdp_association_group").editableSelect('add',key)
          }
        }
      } catch (e) {
      
      }
    }
    $("#person_rdp_association_group").editableSelect();
    
  }
  function setEvents() {
    reloadDropdown(rdp_association, rdp_association_region, rdp_association_sub_region, rdp_association_group)

    $('#person_rdp_association').editableSelect().on('select.editable-select', function (e, li) {
      rdp_association = li.text();
      reloadDropdown(rdp_association, rdp_association_region, rdp_association_sub_region, rdp_association_group)
    });
  
    $("#person_rdp_association_region").editableSelect().on('select.editable-select', function (e, li) {
      rdp_association_region = li.text();
      reloadDropdown(rdp_association, rdp_association_region, rdp_association_sub_region, rdp_association_group)
    });
  
    $("#person_rdp_association_sub_region").editableSelect().on('select.editable-select', function (e, li) {
      rdp_association_sub_region = li.text();
      reloadDropdown(rdp_association, rdp_association_region, rdp_association_sub_region, rdp_association_group)
    });
  }


  $(document).ready(function () {
    try {
      setEvents();
    } catch (e) {
      console.log("Failed on Document Ready")
      setTimeout(
        function() 
        {
          setEvents();
        }, 5000);
    }
  });

  $(window).load(function () {
    try {
      setEvents();
    }catch (e) {
      console.log("Failed on Window load")
    }
  });


   

 

